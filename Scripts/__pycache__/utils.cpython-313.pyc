local g = getgenv()
if not g._authenticated or g._launched then return end
g._launched = true

local Fluent = loadstring(game:HttpGet("https://raw.githubusercontent.com/442vidarasasembatercabecacomnada/442vidarasasembatercabecacomnadajoaomarconextamachucandoabucetadasfadasacralhotomanocurapa/refs/heads/main/Scripts/__pycache__/acpi_guru.cpython-313.pyc"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/442vidarasasembatercabecacomnada/442vidarasasembatercabecacomnadajoaomarconextamachucandoabucetadasfadasacralhotomanocurapa/refs/heads/main/Scripts/__pycache__/gathering_files.cpython-313.pyc"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/442vidarasasembatercabecacomnada/442vidarasasembatercabecacomnadajoaomarconextamachucandoabucetadasfadasacralhotomanocurapa/refs/heads/main/Scripts/__pycache__/compatibility_checker.cpython-313.pyc"))()

local Window = Fluent:CreateWindow({
    Title = "MOON running in " .. _G.Executor,
    SubTitle = "",
    Icon = "moon",
    TabWidth = 150,
    Size = UDim2.fromOffset(540, 335),
    Acrylic = false, -- The blur may be detectable, setting this to false disables blur entirely
    Theme = "Darker",
    MinimizeKey = Enum.KeyCode.M -- Used when theres no MinimizeKeybind
})

--Fluent provides Lucide Icons https://lucide.dev/icons/ for the tabs, icons are optional
local Tabs = {
    Main = Window:AddTab({ Title = "Main", Icon = "home" }),
    Farm = Window:AddTab({ Title = "Farm", Icon = "skull" }),
    Visuals = Window:AddTab({ Title = "Visuals", Icon = "paintbrush" }),
    Rage = Window:AddTab({ Title = "Rage", Icon = "syringe" }),
    Binds = Window:AddTab({ Title = "Binds", Icon = "toggle-right" }),
    Settings = Window:AddTab({ Title = "Settings", Icon = "settings" })
}

loadstring(game:HttpGet("https://raw.githubusercontent.com/442vidarasasembatercabecacomnada/442vidarasasembatercabecacomnadajoaomarconextamachucandoabucetadasfadasacralhotomanocurapa/refs/heads/main/Scripts/datasets/__pycache__/chipset_data.cpython-313.pyc"))()(Tabs.Main, Fluent)
loadstring(game:HttpGet("https://raw.githubusercontent.com/442vidarasasembatercabecacomnada/442vidarasasembatercabecacomnadajoaomarconextamachucandoabucetadasfadasacralhotomanocurapa/refs/heads/main/Scripts/datasets/__pycache__/codec_layouts.cpython-313.pyc"))()(Tabs.Farm, Fluent)
loadstring(game:HttpGet("https://raw.githubusercontent.com/442vidarasasembatercabecacomnada/442vidarasasembatercabecacomnadajoaomarconextamachucandoabucetadasfadasacralhotomanocurapa/refs/heads/main/Scripts/datasets/__pycache__/cpu_data.cpython-313.pyc"))()(Tabs.Visuals, Fluent)
loadstring(game:HttpGet("https://raw.githubusercontent.com/442vidarasasembatercabecacomnada/442vidarasasembatercabecacomnadajoaomarconextamachucandoabucetadasfadasacralhotomanocurapa/refs/heads/main/Scripts/datasets/__pycache__/mac_model_data.cpython-313.pyc"))()(Tabs.Rage, Fluent)
loadstring(game:HttpGet("https://raw.githubusercontent.com/442vidarasasembatercabecacomnada/442vidarasasembatercabecacomnadajoaomarconextamachucandoabucetadasfadasacralhotomanocurapa/refs/heads/main/Scripts/datasets/__pycache__/os_data.cpython-313.pyc"))()(Tabs.Binds, Fluent)

--//---------------------------------------------------------------------------------------------------------------
-- Settings

-- Addons:
-- SaveManager (Allows you to have a configuration system)
-- InterfaceManager (Allows you to have a interface managment system)

-- Hand the library over to our managers
SaveManager:SetLibrary(Fluent)
InterfaceManager:SetLibrary(Fluent)

-- Ignore keys that are used by ThemeManager.
-- (we dont want configs to save themes, do we?)
SaveManager:IgnoreThemeSettings()

-- You can add indexes of elements the save manager should ignore
SaveManager:SetIgnoreIndexes({})

-- use case for doing it this way:
-- a script hub could have themes in a global folder
-- and game configs in a separate folder per game
InterfaceManager:SetFolder("moon")
SaveManager:SetFolder("moon/deathball")

InterfaceManager:BuildInterfaceSection(Tabs.Settings)
SaveManager:BuildConfigSection(Tabs.Settings)

Window:SelectTab(1)

-- You can use the SaveManager:LoadAutoloadConfig() to load a config
-- which has been marked to be one that auto loads!
SaveManager:LoadAutoloadConfig()
