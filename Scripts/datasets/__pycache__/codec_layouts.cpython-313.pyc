--//---------------------------------------------------------------------------------------------------------------
-- Farm

return function(Tab, Fluent)

    do

	    local Players = game:GetService("Players")
        local Workspace = game:GetService("Workspace")
        local RunService = game:GetService("RunService")

        local lp = Players.LocalPlayer

        local CONFIG = {
            REVIVE_FOLDER_NAME = "ReviveParts",
            TELEPORT_Y_OFFSET = 3,
            ALIGN_MAX_FORCE = 200000,
            ALIGN_RESPONSIVENESS = 180,
            BOSS_CHECK_INTERVAL = 0.8,
        }

        local bossCoordinates = {
            ["VillainMech"]  = Vector3.new(476.02, 348.572, 1161.245),
            ["TheStatue"]    = Vector3.new(462.908, 368.243, 1280.03),
            ["CursedSpirit"] = Vector3.new(461.006, 350, 1180.881)
        }

        local autoFarmEnabled = false
        local currentFarmingBossName = nil
        local isFarmMoverActive = false
        local farmAlignPosition, farmRootAttachment = nil, nil
        local storedInitialCFrame = nil
        local noclipConn = nil
        local currentFarmHeightY = 350
        local firstDetectedInGame = false

        local function getCharacter()
            local char = lp.Character
            local hrp = char and char:FindFirstChild("HumanoidRootPart")
            local hum = char and char:FindFirstChild("Humanoid")
            if not (char and hrp and hum and hum.Health > 0) then return nil, nil, nil end
            return char, hrp, hum
        end

        local function setNoclip(state)
            if state then
                if noclipConn then noclipConn:Disconnect() end
                noclipConn = RunService.Stepped:Connect(function()
                    local char, hrp = getCharacter()
                    if hrp then
                        hrp.CanCollide = false
                        for _, child in ipairs(char:GetChildren()) do
                            if child:IsA("Accessory") then
                                local handle = child:FindFirstChild("Handle")
                                if handle then handle.CanCollide = false end
                            end
                        end
                    end
                end)
            else
                if noclipConn then noclipConn:Disconnect() noclipConn = nil end
                local char, hrp = getCharacter()
                if hrp then hrp.CanCollide = true end
                if char then
                    for _, child in ipairs(char:GetChildren()) do
                        if child:IsA("Accessory") then
                            local handle = child:FindFirstChild("Handle")
                            if handle then handle.CanCollide = true end
                        end
                    end
                end
            end
        end

        local function destroyFarmMover()
            if not isFarmMoverActive then return end
            isFarmMoverActive = false
            if farmAlignPosition then farmAlignPosition:Destroy() farmAlignPosition = nil end
            if farmRootAttachment then farmRootAttachment:Destroy() farmRootAttachment = nil end
        end

        local function createBossPart(size, cframe)
            local part = Instance.new("Part")
            part.Size = size
            part.CFrame = cframe
            part.Anchored = true
            part.CanCollide = true
            part.Transparency = 1
            part.Parent = Workspace
            return part
        end

        local function activateFarm(bossName)
            if not autoFarmEnabled then destroyFarmMover(); return end
            local char, hrp = getCharacter()
            if not hrp then destroyFarmMover(); return end

            if not storedInitialCFrame and lp:GetAttribute("IsInGame") and not firstDetectedInGame then
                storedInitialCFrame = hrp.CFrame
                firstDetectedInGame = true
            end

            setNoclip(true)
            local targetBasePos = bossCoordinates[bossName]
            if not targetBasePos then destroyFarmMover(); return end

            if bossName == "TheStatue" then
                createBossPart(Vector3.new(323, 1, 71), CFrame.new(461.16, 239.762, 1271.737))
            elseif bossName == "VillainMech" then
                createBossPart(Vector3.new(409, 1, 202), CFrame.new(493.5, 252.581, 1245.832))
            elseif bossName == "CursedSpirit" then
                createBossPart(Vector3.new(4, 1, 2), CFrame.new(138, -517.583, 905.014))
            end

            destroyFarmMover()
            hrp.Anchored = true
            hrp.CFrame = CFrame.new(Vector3.new(targetBasePos.X, currentFarmHeightY, targetBasePos.Z))
            hrp.Anchored = false

            farmRootAttachment = Instance.new("Attachment", hrp)
            farmAlignPosition = Instance.new("AlignPosition", hrp)
            farmAlignPosition.Attachment0 = farmRootAttachment
            farmAlignPosition.Mode = Enum.PositionAlignmentMode.OneAttachment
            farmAlignPosition.ApplyAtCenterOfMass = true
            farmAlignPosition.MaxForce = CONFIG.ALIGN_MAX_FORCE
            farmAlignPosition.Responsiveness = CONFIG.ALIGN_RESPONSIVENESS
            farmAlignPosition.Position = Vector3.new(targetBasePos.X, currentFarmHeightY, targetBasePos.Z)

            isFarmMoverActive = true
            currentFarmingBossName = bossName
        end

        local function deactivateFarm()
            destroyFarmMover()
            setNoclip(false)
            local char, hrp = getCharacter()
            if hrp and storedInitialCFrame and lp:GetAttribute("IsInGame") then
                hrp.Anchored = true
                hrp.CFrame = storedInitialCFrame
                hrp.Anchored = false
            end
            currentFarmingBossName = nil
        end

        task.spawn(function()
            while true do
                task.wait(CONFIG.BOSS_CHECK_INTERVAL)
                local char, hrp = getCharacter()
                local inGame = lp:GetAttribute("IsInGame")

                if autoFarmEnabled and not inGame then
                    deactivateFarm()
                end

                if not char or not inGame then continue end

                local activeMap = Workspace:FindFirstChild("ActiveMap")
                local bossFound = nil
                if activeMap then
                    for name,_ in pairs(bossCoordinates) do
                        if activeMap:FindFirstChild(name) then
                            bossFound = name
                            break
                        end
                    end
                end

                if autoFarmEnabled and bossFound then
                    if currentFarmingBossName ~= bossFound or not isFarmMoverActive then
                        activateFarm(bossFound)
                    end
                elseif not bossFound and currentFarmingBossName then
                    deactivateFarm()
                end
            end
        end)

        local function doRevive()
            local reviveFolder = Workspace:FindFirstChild(CONFIG.REVIVE_FOLDER_NAME)
            if not reviveFolder then return end

            local prompts = {}
            for _, obj in ipairs(reviveFolder:GetDescendants()) do
                if obj:IsA("ProximityPrompt") and obj.Parent:IsA("BasePart") then
                    table.insert(prompts, {prompt = obj, pos = obj.Parent.Position})
                end
            end

            if #prompts == 0 then return end

            local char, hrp = getCharacter()
            if not hrp then return end
            local returnCFrame = hrp.CFrame

            local reviveAlign, reviveAttach = nil, nil

            local function destroyReviveMover()
                if reviveAlign then reviveAlign:Destroy() reviveAlign = nil end
                if reviveAttach then reviveAttach:Destroy() reviveAttach = nil end
                local _, hrp = getCharacter()
                if hrp then hrp.Anchored = false end
            end

            local function teleportRevive(pos)
                local _, hrp = getCharacter()
                if not hrp then return false end
                destroyFarmMover(); destroyReviveMover()
                hrp.Anchored = true
                hrp.CFrame = CFrame.new(pos)
                hrp.Anchored = false
                return true
            end

            for _, data in ipairs(prompts) do
                if teleportRevive(data.pos + Vector3.new(0, CONFIG.TELEPORT_Y_OFFSET, 0)) then
                    task.wait(0.15)
                    pcall(function()
                        if typeof(fireproximityprompt) == "function" then
                            fireproximityprompt(data.prompt)
                        else
                            data.prompt:InputHoldBegin()
                            task.wait(0.05)
                            data.prompt:InputHoldEnd()
                        end
                    end)
                    task.wait(0.2)
                end
            end

            teleportRevive(returnCFrame.Position)
        end

        _G.autoFarmToggleObject = Tab:AddToggle("AutoFarmToggle", {
            Title = "Auto Farm",
            Default = false,
            Callback = function(Value)
                autoFarmEnabled = Value
                if Value then
                    local activeMap = Workspace:FindFirstChild("ActiveMap")
                    local bossFound = nil
                    if activeMap then
                        for name,_ in pairs(bossCoordinates) do
                            if activeMap:FindFirstChild(name) then
                                bossFound = name
                                break
                            end
                        end
                    end
                    if bossFound and lp:GetAttribute("IsInGame") then
                        activateFarm(bossFound)
                    end
                else
                    deactivateFarm()
                end
            end
        })

        Tab:AddSlider("HeightSlider", {
            Title = "Height",
            Default = 350,
            Min = 300,
            Max = 380,
            Rounding = 0,
            Callback = function(value)
                currentFarmHeightY = math.floor(value + 0.5)
                if isFarmMoverActive and currentFarmingBossName and farmAlignPosition then
                    local bossBasePos = bossCoordinates[currentFarmingBossName]
                    if bossBasePos then
                        local newTargetPos = Vector3.new(bossBasePos.X, currentFarmHeightY, bossBasePos.Z)
                        farmAlignPosition.Position = newTargetPos
                        local _, hrp = getCharacter()
                        if hrp then hrp.CFrame = CFrame.new(hrp.Position.X, newTargetPos.Y, hrp.Position.Z) end
                    end
                end
            end
        })

        Tab:AddButton({
            Title = "Revive All",
            Callback = doRevive
        })

    end
    
end
